name: Build

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:

jobs:

  context-info:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Repo info
        run: |
          curl -s \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}
  UnitTest:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      ITEST_IMAGE_TAG: rc-${{ github.event.number }}
      ORG_NAME: effective-security
      PROJECT_NAME: porto
      COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      RUN_ID: ${{ github.run_id }}
      PULL_NUMBER: ${{ github.event.pull_request.number }}
      MIN_TESTCOV: 80

    steps:
    - name: Create code coverage status for the current commit
      run: |
        curl "https://{GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"in progress â€” This check has started... \",\"context\": \"code cov\"}"
      env:
        GIT_TOKEN: ${{ secrets.BUILDER_PAT }}
        GIT_USER: dissoupov

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prepare
      run: make vars tools generate

    - name: UnitTest
      run: make build covtest

    - name: Generate covarege Status
      run: |
        set -x
        PROJECT_NAME=${PROJECT_NAME}

        total=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
        echo "total cov: $total"
        (( $(echo "$total > ${MIN_TESTCOV}" | bc -l) )) && STATE=success || STATE=failure
        curl "https://${GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"${STATE}\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"${total}%\",\"context\": \"code cov\"}"
      env:
        GIT_TOKEN: ${{ secrets.BUILDER_PAT }}
        GIT_USER: dissoupov

    - name: coveralls
      #if: github.event_name == 'pull_request'
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make coveralls-github
